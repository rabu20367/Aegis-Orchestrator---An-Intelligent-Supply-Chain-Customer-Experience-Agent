apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-server
  namespace: aegis-orchestrator
  labels:
    app: mcp-server
    component: mcp-server
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mcp-server
  template:
    metadata:
      labels:
        app: mcp-server
        component: mcp-server
    spec:
      containers:
      - name: mcp-server
        image: aegis-orchestrator/mcp-server:latest
        ports:
        - containerPort: 8001
          name: http
        env:
        - name: MCP_SERVER_HOST
          valueFrom:
            configMapKeyRef:
              name: aegis-config
              key: MCP_SERVER_HOST
        - name: MCP_SERVER_PORT
          valueFrom:
            configMapKeyRef:
              name: aegis-config
              key: MCP_SERVER_PORT
        - name: BOUTIQUE_API_URL
          valueFrom:
            configMapKeyRef:
              name: aegis-config
              key: BOUTIQUE_API_URL
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: aegis-config
              key: LOG_LEVEL
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: mcp-server
  namespace: aegis-orchestrator
  labels:
    app: mcp-server
spec:
  selector:
    app: mcp-server
  ports:
  - port: 8001
    targetPort: 8001
    name: http
  type: ClusterIP
